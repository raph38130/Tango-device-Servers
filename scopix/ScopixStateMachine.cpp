/*----- PROTECTED REGION ID(ScopixStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        ScopixStateMachine.cpp
//
// description : State machine file for the Scopix class
//
// project :     scopix handeld oscilloscope
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <Scopix.h>

/*----- PROTECTED REGION END -----*/	//	Scopix::ScopixStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace Scopix_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Scopix::is_Input1_allowed()
 *	Description : Execution allowed for Input1 attribute
 */
//--------------------------------------------------------
bool Scopix::is_Input1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Input1 attribute in read access.
	/*----- PROTECTED REGION ID(Scopix::Input1StateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Scopix::Input1StateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Scopix::is_Spectrum1_allowed()
 *	Description : Execution allowed for Spectrum1 attribute
 */
//--------------------------------------------------------
bool Scopix::is_Spectrum1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Spectrum1 attribute in read access.
	/*----- PROTECTED REGION ID(Scopix::Spectrum1StateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Scopix::Spectrum1StateAllowed_READ
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Scopix::is_Idn_allowed()
 *	Description : Execution allowed for Idn attribute
 */
//--------------------------------------------------------
bool Scopix::is_Idn_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Idn command.
	/*----- PROTECTED REGION ID(Scopix::IdnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Scopix::IdnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Scopix::is_Date_allowed()
 *	Description : Execution allowed for Date attribute
 */
//--------------------------------------------------------
bool Scopix::is_Date_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Date command.
	/*----- PROTECTED REGION ID(Scopix::DateStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Scopix::DateStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Scopix::is_Time_allowed()
 *	Description : Execution allowed for Time attribute
 */
//--------------------------------------------------------
bool Scopix::is_Time_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Time command.
	/*----- PROTECTED REGION ID(Scopix::TimeStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Scopix::TimeStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Scopix::is_GpibCmd_allowed()
 *	Description : Execution allowed for GpibCmd attribute
 */
//--------------------------------------------------------
bool Scopix::is_GpibCmd_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GpibCmd command.
	/*----- PROTECTED REGION ID(Scopix::GpibCmdStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Scopix::GpibCmdStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Scopix::is_Trace_allowed()
 *	Description : Execution allowed for Trace attribute
 */
//--------------------------------------------------------
bool Scopix::is_Trace_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Trace command.
	/*----- PROTECTED REGION ID(Scopix::TraceStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Scopix::TraceStateAllowed
	return true;
}

}	//	End of namespace
